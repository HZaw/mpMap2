# Generated by roxygen2: do not edit by hand

export("lineNames<-")
export("selfing<-")
export(as.mpInterval)
export(backcrossPedigree)
export(biparentalDominant)
export(changeMarkerPosition)
export(clusterOrderCross)
export(computeGenotypeProbabilities)
export(detailedPedigree)
export(eightParentPedigreeImproperFunnels)
export(eightParentPedigreeRandomFunnels)
export(eightParentPedigreeSingleFunnel)
export(estimateMap)
export(estimateRF)
export(expand)
export(f2Pedigree)
export(finals)
export(fixedNumberOfFounderAlleles)
export(formGroups)
export(founders)
export(fourParentPedigreeRandomFunnels)
export(fourParentPedigreeSingleFunnel)
export(fromMpMap)
export(generateGridPositions)
export(getAllFunnels)
export(getChromosomes)
export(getPositions)
export(haldane)
export(haldaneToRf)
export(hetData)
export(impute)
export(imputeFounders)
export(infiniteSelfing)
export(jitterMap)
export(kosambi)
export(kosambiToRf)
export(lineNames)
export(linesByNames)
export(listCodingErrors)
export(listCodingErrorsMpMap)
export(markers)
export(mpcross)
export(mpcrossMapped)
export(multiparentSNP)
export(nFounders)
export(nLines)
export(nMarkers)
export(normalPhenotype)
export(orderCross)
export(pedigree)
export(pedigreeToGraph)
export(purdyToPedigree)
export(removeHets)
export(rfToHaldane)
export(rfToKosambi)
export(rilPedigree)
export(selfing)
export(simulateMPCross)
export(sixteenParentPedigreeRandomFunnels)
export(sixteenParentPedigreeRandomFunnelsPrototype)
export(testDistortion)
export(toMpMap)
export(twoParentPedigree)
exportClasses(pedigreeGraph)
exportMethods(plot)
exportMethods(subset)
import(ggplot2)
import(igraph)
import(methods)
import(qtl)
import(stats)
import(utils)
importClassesFrom(Matrix,dppMatrix)
importClassesFrom(Matrix,dspMatrix)
importClassesFrom(Matrix,index)
importFrom(fastcluster,hclust)
importFrom(methods,setClass)
importFrom(nnls,nnls)
importFrom(pryr,address)
importFrom(stats,as.dist)
importFrom(stats,cutree)
importFrom(stats,pchisq)
importFrom(stats,rnorm)
importFrom(utils,combn)
importFrom(utils,head)
importFrom(utils,tail)
useDynLib(mpMap2)
