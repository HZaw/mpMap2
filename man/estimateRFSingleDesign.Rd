% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/estimateRFSingleDesign.R
\name{estimateRFSingleDesign}
\alias{estimateRFSingleDesign}
\title{Estimate recombination fractions}
\usage{
estimateRFSingleDesign(object, recombValues, lineWeights, keepLod = FALSE,
  keepLkhd = FALSE, verbose = FALSE, markerRows = 1:nMarkers(object),
  markerColumns = 1:nMarkers(object))
}
\arguments{
\item{object}{The input mpcross object}

\item{recombValues}{a vector of test values to use for the numeric maximum likelihood step. Must contain 0 and 0.5, and must have less than 255 values in total. The default value is \code{c(0:20/200, 11:50/100)}.}

\item{keepLod}{Set to \code{TRUE} to compute the likelihood ratio score statistics for testing whether the estimate is different from 0.5. Due to memory constraints this should generally be left as \code{FALSE}.}

\item{keepLkhd}{Set to \code{TRUE} to compute the maximum value of the likelihood. Due to memory constraints this should generally be left as \code{FALSE}.}

\item{verbose}{Output diagnostic information, such as the amount of memory required, and the progress of the computation}
}
\description{
This function estimates the recombination fractions between all pairs of markers in the input object. The recombination fractions are estimated using numerical maximum likelihood, and a grid search. Because every estimate will be one of the input test values, the estimates can be stored efficiently with a single byte per estimate.
}
\examples{
map <- qtl::sim.map(len = 100, n.mar = 11, include.x=FALSE)
f2Pedigree <- f2Pedigree(1000)
cross <- simulateMPCross(map = map, pedigree = f2Pedigree, mapFunction = haldane, seed = 1)
rf <- estimateRF(cross)
#Print the estimated recombination fraction values
rf@rf@theta[1:11, 1:11]
}

